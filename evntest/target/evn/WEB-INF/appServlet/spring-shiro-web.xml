<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       ">
      
    <bean id="userRealm" class="cn.wanmei.manage.security.shiro.ManageUserRealm">      
    </bean>
    
    <bean id="redisManager" class="cn.wanmei.authc.security.shiro.redis.RedisDao">

	</bean>
	
	<bean id="redisSessionDAO" class="cn.wanmei.authc.security.shiro.RedisCacheSessionDAO">
	    <property name="redisManager" ref="redisManager" />
	    <property name="defaultExpireTimeSecond" value="7200"/>
	</bean>

     <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="redisSessionDAO"/>
        <property name="globalSessionTimeout" value="7200000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>      
        <property name="sessionIdCookieEnabled" value="true"/>        
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>
    
     <bean id="ehCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:spring-shiro-ehcache.xml" />
    </bean>
    

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
    	 <property name="cacheManager" ref="ehCacheManager" />
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
    
    <bean id="formAuthenticationFilter" class="cn.wanmei.manage.security.shiro.filter.ManageUserFormAuthenticationFilter">
        <property name="usernameParam" value="userName"/>
        <property name="passwordParam" value="password"/>
    </bean>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login.htm"/>
        <property name="unauthorizedUrl" value="/unauthorized.htm"/>
       
        <property name="filterChainDefinitions">
            <value>
                 /sms/**=anon
                 /assets/**=anon
                 /bootstrap/**=anon
                 /plugins/**=anon
                 /login/**=anon
                 /index.jsp = anon 
                /unauthorized.htm = anon
                /login.htm = authc
                /logout = logout
                /** = user
            </value>
        </property>
        <property name="filters">
	      <map>       
	        <entry key="user">
	          <bean class="cn.wanmei.manage.security.shiro.filter.ManageAnyRolesFilter">
	          </bean>
	         
	        </entry>
	         <entry key="authc" value-ref="formAuthenticationFilter">
	        
	        </entry>
	      </map>
	    </property>
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>